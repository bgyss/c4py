name: Python Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write  # Need write permission to commit fixes
  checks: write
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
      fail-fast: false

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 1

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH

    - name: Cache uv dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/uv
          ~/.cargo/bin/uv
        key: ${{ runner.os }}-uv-${{ hashFiles('pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-uv-

    - name: Create and activate virtual environment
      run: |
        uv venv
        . .venv/bin/activate

    - name: Install dependencies
      run: |
        . .venv/bin/activate
        uv pip install -e ".[dev]"
        uv pip install ruff

    - name: Run Ruff check & fix
      run: |
        . .venv/bin/activate
        ruff check . --fix
        ruff format .
        
    - name: Commit and push changes
      run: |
        git config --global user.name 'GitHub Actions Bot'
        git config --global user.email 'actions@github.com'
        if [[ -n $(git status --porcelain) ]]; then
          git add .
          git commit -m "Auto-fix code style issues"
          git push
        else
          echo "No changes to commit"
        fi

    - name: Run tests with pytest
      run: |
        . .venv/bin/activate
        pytest --cov=c4py --cov-report=xml

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        slug: SphereStudios/c4py